/*
 * This file was automatically generated by EvoSuite
 * Thu Jun 18 21:44:00 GMT 2020
 */

package org.autotest;

import org.junit.Test;
import org.junit.Ignore;
import static org.junit.Assert.*;
import org.autotest.StackAr;

public class StackAr_ESTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      String string0 = "}yz.x$/h.bet-";
      stackAr0.push("}yz.x$/h.bet-");
      stackAr0.pop();
      stackAr0.push("}yz.x$/h.bet-");
      stackAr0.push("}yz.x$/h.bet-");
      stackAr0.toString();
      stackAr0.isEmpty();
      stackAr0.push("}yz.x$/h.bet-");
      stackAr0.pop();
      stackAr0.pop();
      stackAr0.top();
      stackAr0.equals("}yz.x$/h.bet-");
      StackAr stackAr1 = new StackAr(0);
      try {
        stackAr1.push("}yz.x$/h.bet-");
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push((Object) null);
      StackAr stackAr1 = new StackAr();
      boolean boolean0 = stackAr0.equals(stackAr1);
      assertEquals(1, stackAr0.size());
      assertFalse(boolean0);

      stackAr1.isEmpty();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2132);
      StackAr stackAr1 = new StackAr(2132);
      stackAr0.equals(stackAr1);
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2148);
      stackAr0.size();
      stackAr0.size();
      stackAr0.toString();
      stackAr0.equals("[]");
      StackAr stackAr1 = new StackAr();
      stackAr0.hashCode();
      stackAr1.equals((Object) null);
      stackAr1.push("[]");
      stackAr0.isFull();
      stackAr1.toString();
      stackAr1.equals(stackAr0);
      StackAr stackAr2 = new StackAr(0);
      stackAr1.pop();
      stackAr0.toString();
      Object object0 = new Object();
      StackAr stackAr3 = new StackAr(0);
      stackAr1.push(stackAr3);
      try {
        stackAr0.pop();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StackAr stackAr0 = null;
      try {
        stackAr0 = new StackAr((-1143));
        fail("Expecting exception: IllegalArgumentException");

      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2127);
      stackAr0.equals(stackAr0);
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      try {
        stackAr0.pop();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-1);
      StackAr stackAr0 = null;
      try {
        stackAr0 = new StackAr((-1));
        fail("Expecting exception: IllegalArgumentException");

      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.hashCode();
      assertEquals(0, stackAr0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      stackAr0.toString();
      stackAr0.isEmpty();
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StackAr stackAr0 = new StackAr(10);
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.pop();
      stackAr0.toString();
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push("cd%$P_>23f*8\u0000'");
      StackAr stackAr1 = new StackAr();
      stackAr1.toString();
      stackAr0.toString();
      stackAr1.toString();
      stackAr0.toString();
      stackAr1.toString();
      stackAr0.push(stackAr1);
      stackAr0.isEmpty();
      stackAr0.isFull();
      stackAr0.isFull();
      stackAr0.pop();
      stackAr0.push("cd%$P_>23f*8\u0000'");
      stackAr0.isFull();
      StackAr stackAr2 = new StackAr(0);
      stackAr1.equals(stackAr2);
      StackAr stackAr3 = new StackAr();
      try {
        stackAr3.pop();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StackAr stackAr0 = new StackAr(3392);
      StackAr stackAr1 = new StackAr();
      Object object0 = new Object();
      stackAr1.push(object0);
      stackAr1.top();
      stackAr0.push(stackAr1);
      stackAr0.size();
      stackAr0.pop();
      try {
        stackAr0.pop();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StackAr stackAr0 = new StackAr(1);
      StackAr stackAr1 = new StackAr();
      stackAr0.push(stackAr1);
      stackAr0.toString();
      try {
        stackAr0.push("%cxX&");
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push((Object) null);
      stackAr0.pop();
      stackAr0.push((Object) null);
      stackAr0.size();
      stackAr0.isEmpty();
      stackAr0.push((Object) null);
      int int0 = 242;
      StackAr stackAr1 = new StackAr(242);
      stackAr0.equals(stackAr1);
      stackAr1.toString();
      try {
        stackAr1.pop();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      StackAr stackAr1 = new StackAr();
      stackAr1.push(stackAr0);
      stackAr0.push(stackAr1);
      stackAr1.push(stackAr0);
      stackAr0.isEmpty();
      StackAr stackAr2 = new StackAr();
      stackAr1.equals(stackAr2);
      // Undeclared exception!
      try {
        stackAr0.hashCode();
        fail("Expecting exception: StackOverflowError");

      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.size();
      boolean boolean0 = stackAr0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      String string0 = "`d[V";
      stackAr0.equals("`d[V");
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Ignore
  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StackAr stackAr0 = new StackAr(284);
      stackAr0.isFull();
      StackAr stackAr1 = new StackAr();
      stackAr0.push(stackAr1);
      stackAr1.push(stackAr0);
      stackAr1.push(stackAr0);
      stackAr1.toString();
      stackAr0.push(stackAr1);
      stackAr0.top();
      String string0 = null;
      stackAr1.top();
      Object object0 = stackAr1.top();
      stackAr0.equals(string0);
      stackAr0.push(object0);
      stackAr1.toString();
      StackAr stackAr2 = new StackAr();
      stackAr2.pop();
      stackAr2.toString();
      stackAr2.pop();
      stackAr2.top();
      stackAr0.push(stackAr2);
      stackAr2.toString();
      stackAr2.toString();
      stackAr0.toString();
      stackAr2.top();
      stackAr0.isEmpty();
      stackAr1.top();
      stackAr1.pop();
      stackAr1.size();
      stackAr1.isEmpty();
      StackAr stackAr3 = new StackAr();
      stackAr2.equals(stackAr3);
      stackAr0.pop();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.toString();
      Object object0 = new Object();
      stackAr0.push(object0);
      stackAr0.top();
      Object object1 = stackAr0.top();
      stackAr0.push(object1);
      StackAr stackAr1 = new StackAr();
      stackAr0.push(stackAr1);
      stackAr0.push(object0);
      stackAr0.hashCode();
      stackAr0.pop();
      stackAr0.toString();
      stackAr0.hashCode();
      Object object2 = new Object();
      stackAr0.push(object2);
      stackAr0.top();
      stackAr0.top();
      stackAr0.push("[]");
      stackAr0.hashCode();
      stackAr0.size();
      stackAr0.push("[java.lang.Object@5b7be736,java.lang.Object@5b7be736,[]]");
      stackAr0.size();
      stackAr0.hashCode();
      stackAr0.isFull();
      stackAr1.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2139);
      StackAr stackAr1 = new StackAr(2139);
      stackAr1.toString();
      stackAr1.toString();
      stackAr0.equals(stackAr1);
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2148);
      stackAr0.size();
      stackAr0.size();
      stackAr0.toString();
      stackAr0.hashCode();
      stackAr0.equals("");
      StackAr stackAr1 = new StackAr();
      stackAr0.push(stackAr1);
      stackAr0.hashCode();
      stackAr0.toString();
      stackAr1.toString();
      stackAr0.isEmpty();
      stackAr0.top();
      stackAr1.equals((Object) null);
      stackAr1.size();
      stackAr1.push("");
      stackAr0.isFull();
      stackAr1.toString();
      Object object0 = new Object();
      stackAr1.push(object0);
      stackAr1.equals(stackAr0);
      stackAr0.equals("[[]]");
      stackAr1.pop();
      StackAr stackAr2 = new StackAr(0);
      stackAr1.pop();
      stackAr2.toString();
      try {
        stackAr2.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StackAr stackAr0 = new StackAr(0);
      stackAr0.toString();
      stackAr0.isFull();
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      Object object0 = new Object();
      stackAr0.size();
      stackAr0.push(object0);
      stackAr0.push((Object) null);
      stackAr0.push((Object) null);
      stackAr0.top();
      stackAr0.pop();
      stackAr0.pop();
      stackAr0.isEmpty();
      stackAr0.top();
      stackAr0.isFull();
      stackAr0.isFull();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StackAr stackAr0 = new StackAr(2139);
      stackAr0.toString();
      stackAr0.equals(stackAr0);
      try {
        stackAr0.top();
        fail("Expecting exception: IllegalStateException");

      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StackAr stackAr0 = new StackAr();
      stackAr0.push((Object) null);
      StackAr stackAr1 = new StackAr();
      stackAr0.pop();
      stackAr1.push((Object) null);
      stackAr0.equals(stackAr1);
      stackAr1.isEmpty();
  }
}
